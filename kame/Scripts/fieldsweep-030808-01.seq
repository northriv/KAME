def wait_within(node, val, min_wait, timeout, incr = 1)
 tstart = Time.now
 print "Wait for stabilize '#{node.name}' within #{val}"
 sleep min_wait
 while tstart + timeout > Time.now
  if node.get().abs <= val then
   print "OK. #{Time.now - tstart} sec. lost"  
   return true
  end
  sleep incr
 end
 print "Time out #{Time.now - tstart} sec."
 false
end

ps = measurement["Drivers"]["PS120"]
tempctl = measurement["Drivers"]["Cryocon"]
field = measurement["Analizers"]["PS"]["Field"]["Value"]

def ps.hsweep(target, rate)
  self["SweepRate"].set(rate)
  self["TargetField"].set(target)
  wait_within(self["Stabilized"], 0.0001, 3, 3600*12)
end

def tempctl.settemp(target)
#  p = 50 + 30 * log10(target)
#  p = (p > 10) ? p : 10
#  newp = Integer(p / 5 + 0.5) * 5
#  if self["P"].get != newp then
#    self["P"].set(newp)
#  end
  self["TargetTemp"].set(target)
end

print "start"

ps["AllowPersistent"].set(false)

ht=14.1
ps.hsweep(-ht, 0.2)
for t in [2.0, 3.0]
  tempctl.settemp(t)
  wait_within(tempctl["Stabilized"], t / 100, 30, 600)
  ps.hsweep(ht, 0.2)
  ht = -ht
end
