def wait_within(node, val, min_wait, timeout, incr = 1)
 tstart = Time.now
 print "Wait for stabilize '#{node.name}' within #{val}"
 sleep min_wait
 while tstart + timeout > Time.now
  if node.get().abs <= val then
   print "OK. #{Time.now - tstart} sec. lost"  
   return true
  end
  sleep incr
 end
 print "Time out #{Time.now - tstart} sec."
 false
end

ps = measurement["Drivers"]["PS120"]
tempctl = measurement["Drivers"]["AVS47IB"]
field = measurement["Analizers"]["PS"]["Field"]["Value"]
freq = measurement["Analizers"]["NMRSGControl"]["Freq"]
average = measurement["Drivers"]["DSO"]["Average"]
pulser = measurement["Drivers"]["Pulser"]
spectrum = measurement["Analizers"]["NMRSpectrum1"]
spectrumraw = measurement["Analizers"]["NMRSpectrum3"]

def ps.hsweep(target, rate)
  self["SweepRate"].set(rate)
  self["TargetField"].set(target)
  wait_within(self["Stabilized"], 0.0005, 3, 3600*12)
end

def tempctl.settemp(target, newp)
  self["P"].set(newp)
  self["TargetTemp"].set(target)
end

print "start"

ps["AllowPersistent"].set(false)

for t,p,av,rep in [[0.15, 5, 1, 10], [0.3, 10, 2, 5], [0.6, 15, 4, 1], [0.8, 20, 4, 0.8] ]
 tempctl.settemp(t, p)
 average.set(av)
 pulser["Output"].set(0)
 pulser["RT"].set(rep*1000)
 pulser["CombP1"].set(300*0.8/t)
 wait_within(tempctl["Stabilized"], t/20, 3, 1800)
 pulser["Output"].set(1)
 
 f = 45.3
 while f > 44.25
  f = f - 0.1
  freq.set(f)
  hcenter=7.822/44.8*f
  hmax=hcenter+0.03
  hmin=hcenter-0.03
  ps.hsweep(hmax, 0.1)
  sleep 60
  spectrum["Spectrum"]["FileName"].set("20040620-#{f}MHz-spectrum-#{t}K.dat")
  spectrumraw["Spectrum"]["FileName"].set("20040620-#{f}MHz-spectrum-raw-#{t}K.dat")
  spectrum["CenterFreq"].set(f)
  spectrumraw["CenterFreq"].set(f)
  spectrum["FieldMax"].set(hcenter+0.1)
  spectrum["FieldMin"].set(hcenter-0.1)
  spectrumraw["FieldMax"].set(hcenter+0.1)
  spectrumraw["FieldMin"].set(hcenter-0.1)
  ps.hsweep(hmin, 0.002)
  spectrum["Spectrum"]["Dump"].touch()
  spectrumraw["Spectrum"]["Dump"].touch()
 end
end
